// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                          String    @id @default(uuid())
  name                        String
  email                       String    @unique
  password                    String
  stack                       String[]
  role                        String    @default("user")
  authenticationCode          Int?
  authenticated               Boolean   @default(false)
  authenticationCodeCreatedAt DateTime?
  createdAt                   DateTime  @default(now())
  updatedAt                   DateTime  @updatedAt
  Post                        Post[]
}

model Post {
  id          String   @id @default(uuid())
  title       String
  subtitle    String
  description String
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
}

model Candidate {
  id               String           @id @default(uuid())
  name             String
  email            String           @unique
  telephone        String
  cv               String
  github           String
  linkedin         String
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  applications     Int              @default(1)
  jobOpportunities JobOpportunity[]
}

model JobOpportunity {
  id          String      @id @default(uuid())
  title       String
  description String
  category    String
  status      jobStatus   @default(OPENED)
  stack       String[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  candidates  Candidate[]
}

model Voluntary {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  stack     String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum jobStatus {
  OPENED
  RECRUITING
  HIRING
  CLOSED
}

// enum Categorys {
//   FRONTEND
//   BACKEND
//   UX
//   DEVOPS
// }
